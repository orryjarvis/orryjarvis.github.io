{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/menu.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","BlogPage","_ref","data","a","createElement","title","keywords","allMarkdownRemark","edges","map","post","key","node","id","frontmatter","date","to","path","propTypes","PropTypes","any","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Menu","paddingTop","listStyle","display","justifyContent","Layout","Fragment","header","menu","textAlign","_755544856"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAOMa,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACfT,EAAAU,EAAAC,cAACN,EAAA,EAAD,KACEL,EAAAU,EAAAC,cAACL,EAAA,EAAD,CAAKM,MAAM,OAAOC,SAAU,mCAC5Bb,EAAAU,EAAAC,cAAA,0BACCF,EAAKK,kBAAkBC,MAAMC,IAAI,SAAAC,GAAI,OACpCjB,EAAAU,EAAAC,cAAA,OAAKO,IAAKD,EAAKE,KAAKC,IAClBpB,EAAAU,EAAAC,cAAA,UAAKM,EAAKE,KAAKE,YAAYT,OAC3BZ,EAAAU,EAAAC,cAAA,0BAAkBM,EAAKE,KAAKE,YAAYC,MACxCtB,EAAAU,EAAAC,cAAA,WACAX,EAAAU,EAAAC,cAAA,WACAX,EAAAU,EAAAC,cAACP,EAAA,EAAD,CAAMmB,GAAIN,EAAKE,KAAKE,YAAYG,MAAhC,aACAxB,EAAAU,EAAAC,cAAA,WACAX,EAAAU,EAAAC,cAAA,WACAX,EAAAU,EAAAC,cAAA,gBAMRJ,EAASkB,UAAY,CACnBhB,KAAMiB,IAAUC,KAGX,IAAM7B,EAAS,aAiBPS,8CC/Cfb,EAAAG,EAAAD,EAAA,sBAAAgC,IAAA,IAAA7B,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAA2B,EAAAnC,EAAA,IAAAoC,EAAApC,EAAAO,EAAA4B,GAAAnC,EAAAG,EAAAD,EAAA,sBAAAkC,EAAApB,IAAAhB,EAAA,SAYMqC,EAAqBC,IAAMC,cAAc,IAEzCL,EAAc,SAAAM,GAAK,OACvBlC,EAAAU,EAAAC,cAACoB,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMzB,MACL2B,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAO5B,MAEtDyB,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMzB,KAAOyB,EAAMzB,KAAKA,KAAO2B,EAAgBF,EAAMG,OAAO5B,MAGvDT,EAAAU,EAAAC,cAAA,uCA4BfiB,EAAYH,UAAY,CACtBhB,KAAMiB,IAAUc,OAChBH,MAAOX,IAAUe,OAAOC,WACxBJ,OAAQZ,IAAUiB,KAClBJ,SAAUb,IAAUiB,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAzC,GAAkB,IAAf0C,EAAe1C,EAAf0C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOtB,IAAMrB,cAAc4C,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBxB,UAAY,CAC3ByB,SAAUxB,IAAUiC,MAAM,CACxBL,SAAU5B,IAAUe,OAAOC,aAC1BA,YAGUO,oMChBf,SAASW,EAATpD,GAA2D,IAA5CqD,EAA4CrD,EAA5CqD,YAAaC,EAA+BtD,EAA/BsD,KAAMC,EAAyBvD,EAAzBuD,KAAMlD,EAAmBL,EAAnBK,SAAUD,EAASJ,EAATI,MAChD,OACEoD,EAAAtD,EAAAC,cAACsD,EAAA,EAAD,CACE5B,MAAO6B,EACP5B,OAAQ,SAAA7B,GACN,IAAM0D,EACJN,GAAepD,EAAK2D,KAAKC,aAAaR,YACxC,OACEG,EAAAtD,EAAAC,cAAC2D,EAAA5D,EAAD,CACE6D,eAAgB,CACdT,QAEFlD,MAAOA,EACP4D,cAAa,QAAU/D,EAAK2D,KAAKC,aAAazD,MAC9CmD,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS9D,GAEX,CACE+D,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASjE,EAAK2D,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAAS9D,GAEX,CACE6D,KAAI,sBACJC,QAASP,IAGVU,OACChE,EAASiE,OAAS,EACd,CACEL,KAAI,WACJC,QAAS7D,EAASkE,KAAT,OAEX,IAELF,OAAOd,MAtDlBtD,KAAAuE,IA8DJpB,EAAIqB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACNlD,SAAU,IAGZ+C,EAAInC,UAAY,CACdoC,YAAanC,IAAUe,OACvBqB,KAAMpC,IAAUe,OAChBsB,KAAMrC,IAAUwD,MAChBrE,SAAUa,IAAUyD,QAAQzD,IAAUe,QACtC7B,MAAOc,IAAUe,OAAOC,YAGXkB,MAEf,IAAMM,EAAY,yQCjFZkB,EAAS,SAAA5E,GAAA,IAAG6E,EAAH7E,EAAG6E,UAAH,OACbC,EAAA5E,EAAAC,cAAA,UACE4E,MAAO,CACLC,WAAU,YAGZF,EAAA5E,EAAAC,cAAA,OACE4E,MAAO,CACLE,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTL,EAAA5E,EAAAC,cAAA,MAAI4E,MAAO,CAAEE,OAAQ,IACnBH,EAAA5E,EAAAC,cAACiF,EAAA,EAAD,CACErE,GAAG,IACHgE,MAAO,CACLM,MAAK,QACLC,eAAc,SAGfT,OAOXD,EAAO3D,UAAY,CACjB4D,UAAW3D,IAAUe,QAGvB2C,EAAOH,aAAe,CACpBI,UAAS,IAGID,QCLAW,EAhCF,WACX,OACET,EAAA5E,EAAAC,cAAA,OACE4E,MAAO,CACLC,WAAU,UACVQ,WAAY,SAGdV,EAAA5E,EAAAC,cAAA,MACE4E,MAAO,CACLU,UAAW,OACXC,QAAS,OACTC,eAAgB,iBAGlBb,EAAA5E,EAAAC,cAAA,UACE2E,EAAA5E,EAAAC,cAACiF,EAAA,EAAD,CAAMrE,GAAG,KAAT,SAEF+D,EAAA5E,EAAAC,cAAA,UACE2E,EAAA5E,EAAAC,cAACiF,EAAA,EAAD,CAAMrE,GAAG,SAAT,SAEF+D,EAAA5E,EAAAC,cAAA,UACE2E,EAAA5E,EAAAC,cAACiF,EAAA,EAAD,CAAMrE,GAAG,WAAT,WAEF+D,EAAA5E,EAAAC,cAAA,UACE2E,EAAA5E,EAAAC,cAACiF,EAAA,EAAD,CAAMrE,GAAG,UAAT,aCpBJ6E,UAAS,SAAA5F,GAAA,IAAG+B,EAAH/B,EAAG+B,SAAH,OACb+C,EAAA5E,EAAAC,cAACiF,EAAA,EAAD,CACEvD,MAAK,YASLC,OAAQ,SAAA7B,GAAI,OACV6E,EAAA5E,EAAAC,cAAA2E,EAAA5E,EAAA2F,SAAA,KACEf,EAAA5E,EAAAC,cAAC2F,EAAD,CAAQjB,UAAW5E,EAAK2D,KAAKC,aAAazD,QAC1C0E,EAAA5E,EAAAC,cAAC4F,EAAD,MACAjB,EAAA5E,EAAAC,cAAA,OACE4E,MAAO,CACLE,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPK,WAAY,IAGdV,EAAA5E,EAAAC,cAAA,YAAO4B,GACP+C,EAAA5E,EAAAC,cAAA,cACE2E,EAAA5E,EAAAC,cAAA,KACE4E,MAAO,CACLiB,UAAW,UAFf,mCAxBV/F,KAAAgG,MAsCFL,EAAO3E,UAAY,CACjBc,SAAUb,IAAUP,KAAKuB,YAGZ0D","file":"component---src-pages-blog-js-e2c2bb8bd7abfa8dea4b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst BlogPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Blog\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1>Latest Posts</h1>\n    {data.allMarkdownRemark.edges.map(post => (\n      <div key={post.node.id}>\n        <h3>{post.node.frontmatter.title}</h3>\n        <small>Posted on {post.node.frontmatter.date}</small>\n        <br />\n        <br />\n        <Link to={post.node.frontmatter.path}>Read more</Link>\n        <br />\n        <br />\n        <hr />\n      </div>\n    ))}\n  </Layout>\n);\n\nBlogPage.propTypes = {\n  data: PropTypes.any,\n};\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#4A86E8`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Menu = () => {\n  return (\n    <div\n      style={{\n        background: `#f0f0f0`,\n        paddingTop: '10px',\n      }}\n    >\n      <ul\n        style={{\n          listStyle: 'none',\n          display: 'flex',\n          justifyContent: 'space-evenly',\n        }}\n      >\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">Blog</Link>\n        </li>\n        <li>\n          <Link to=\"/social\">Social</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport Menu from './menu';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Menu />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            <p\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              Observations by Orry Jarvis\n            </p>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}